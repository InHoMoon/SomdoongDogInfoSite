<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Mapper DTD -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="somdoong.community.dao.face.RecommendboardDao">

	<!-- rboard 전체 게시글 수 -->
	<select id="selectCntAll" resultType="int">
		SELECT count(*) FROM recommendboard
	</select>

	
	<!-- rboard 전체 게시글 리스트 -->
	<select id="selectList" resultType="Recommendboard" parameterType="Paging_f" >
	    SELECT recommendboard.rno, title,content, userid, hit, write_date, likecnt, stored_name AS finame 
	    FROM (
			    SELECT rownum rnum, R.* FROM (
			        SELECT
			            rno, title, content , userid, hit, write_date
			        FROM recommendboard
			        ORDER BY rno DESC
			    ) R
			) recommendboard
	        LEFT JOIN (
			    SELECT rno, count(rno) AS likeCnt
			    from rboard_like
			    GROUP BY rno
			) l ON recommendboard.rno = l.rno
	        LEFT OUTER JOIN rboard_file fi on recommendboard.rno = fi.rno 
		WHERE rnum BETWEEN #{startNo } AND #{endNo }
		ORDER BY recommendboard.rno desc
	</select>
	
	
	<!-- 게시글 상세보기 -->
	<select id="selectBoard" resultType="Recommendboard" parameterType="Recommendboard">
		SELECT
			rno, title, content, userid, hit, write_date, address, planame
			FROM recommendboard
		WHERE rno = #{rno}
	</select>


	<!-- 조회수 -->
	<update id="hit" parameterType="Recommendboard">
		UPDATE recommendboard
		SET hit = hit+1
		WHERE rno = #{rno}
	</update>
	
	
	<!-- 해당 유저가 좋아요를 눌렀는지 안눌렀는지 -->
	<select id="findLike" resultType="int" parameterType="RboardLike">
		SELECT count(*) FROM rboard_like
		WHERE rno = #{rno}  AND userid = #{userid}
	</select>
	
	
	<!-- 좋아요 등록 -->
	<insert id="insertLike" parameterType="RboardLike">
		INSERT INTO rboard_like 
		VALUES (rboard_like_seq.nextval, #{rno}, #{userid} )
	</insert>
	
	
	<!-- 좋아요 취소 -->
	<delete id="deleteLike" parameterType="RboardLike">
		DELETE FROM rboard_like
		WHERE rno = #{rno} AND userid = #{userid}
	</delete>
	
	
	<!-- 게시글 등록 -->
	<insert id="insertBoard" parameterType="Recommendboard">
		<selectKey order="BEFORE" resultType="int" keyProperty="rno">
			SELECT recommendboard_seq.nextval FROM dual
		</selectKey>
	
		INSERT INTO recommendboard ( rno, title, content , userid, address, planame )
		VALUES ( #{rno }, #{title }, #{content }, #{userid }, #{address}, #{planame})
	</insert>
	
	
	<!-- 첨부파일 등록 -->
	<insert id="insertFile" parameterType="RboardFile">
		INSERT INTO rboard_file ( r_fileno, rno, origin_name, stored_name)
		VALUES ( rboard_file_seq.nextval, #{rno }, #{originName }, #{storedName } )
	</insert>


	<!-- 게시글번호로 파일 조회 -->
	<select id="selectFileByBoardno" resultType="RboardFile" parameterType="Recommendboard">
		SELECT
			r_fileno, rno, origin_name, stored_name
		FROM rboard_file
		WHERE rno = #{rno }
	</select>
	
	
	<!-- 파일번호로 게시글 조회 -->
	<select id="selectFileByFileno" resultType="RboardFile" parameterType="RboardFile">
		SELECT
			r_fileno, rno, origin_name, stored_name
		FROM rboard_file
		WHERE r_fileno = #{rFileno }
	</select>
	
	
	<!-- 검색 리스트 조회 -->
	<select id="selectSearchlist" resultType="Recommendboard" parameterType="Paging_f" >
		SELECT recommendboard.rno, title,content, userid, hit, write_date, likecnt, stored_name AS finame 
	    FROM (
			    SELECT rownum rnum, R.* FROM (
			        SELECT
			            rno, title, content , userid, hit, write_date
			        FROM recommendboard
			        <choose>
						<when test="searchType == 'title'">
							where title like '%'|| #{keyword} ||'%'
						</when>
			
						<when test="searchType == 'content'">
							where content like '%'|| #{keyword} ||'%'
						</when>
						
						<when test="searchType == 'writer'">
							where userid like '%'|| #{keyword} ||'%'
						</when>
					</choose>
			        ORDER BY rno DESC
			    ) R
			) recommendboard
			LEFT JOIN (
			    SELECT rno, count(rno) AS likeCnt
			    from rboard_like
			    GROUP BY rno
			) l ON recommendboard.rno = l.rno
	        LEFT OUTER JOIN rboard_file fi on recommendboard.rno = fi.rno 
			WHERE rnum BETWEEN #{startNo } AND #{endNo }
			ORDER BY recommendboard.rno desc
	</select>
	
	
	<!-- 검색 리스트 페이징 -->
	<select id="getPagingSearchCnt" parameterType="Paging_f" resultType="int">
		select count(*) from recommendboard 
		<choose>
			<when test="searchType == 'title'">
				WHERE title like '%'|| #{keyword} ||'%'
			</when>
			<when test="searchType == 'content'">
				WHERE content like '%'|| #{keyword} ||'%'
			</when>
			<when test="searchType == 'writer'">
				WHERE userid like '%'|| #{keyword} ||'%'
			</when>
		</choose>
	</select>
	
	
	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="Recommendboard">
		UPDATE recommendboard
		SET title = #{title}, content = #{content}, address = #{address}, planame = #{planame}
		WHERE rno = #{rno}
	</update>

	
	<!-- 게시글 수정 시 첨부파일 삭제 -->
	<delete id="deleteFile" parameterType="Recommendboard">
		DELETE rboard_file
		WHERE rno = #{rno}	
	</delete>
	
	
	<!-- 게시글 삭제 -->
	<delete id="delete" parameterType="Recommendboard">
		delete recommendboard
		where rno = #{rno}
	</delete>
	
	
</mapper>